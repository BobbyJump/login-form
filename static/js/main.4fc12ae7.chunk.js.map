{"version":3,"sources":["data/countries.js","components/App.js","index.js"],"names":["id","name","App","onChange","event","console","log","target","value","setState","onChangeAgree","checked","onChangeAvatar","reader","FileReader","onload","avatar","result","readAsDataURL","files","onSubmit","preventDefault","errors","state","username","length","usarname","password","repeatPassword","Object","keys","getItemsOptions","items","map","item","key","country","gender","agree","className","type","placeholder","ref","node","this","htmlFor","countries","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fc12ae7.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: \"Ukraine\"\n  },\n  {\n    id: 2,\n    name: \"Germany\"\n  },\n  {\n    id: 3,\n    name: \"France\"\n  },\n  {\n    id: 4,\n    name: \"Spain\"\n  },\n  {\n    id: 5,\n    name: \"USA\"\n  }\n];\n","import React from \"react\";\nimport countries from \"../data/countries\"\n\nexport default class App extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      country: \"1\",\n      gender: \"male\",\n      agree: true,\n      avatar: \"\",\n      errors: {\n        usarname: false,\n        password: false,\n        repeatPassword: false\n      }\n    };\n  }\n\n  onChange = event => {\n    console.log(event.target.name, event.target.value);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onChangeAgree = event => {\n    //debugging\n    console.log(event.target.name, event.target.value, event.target.checked);\n    console.log(typeof event.target.value)\n    this.setState({\n      [event.target.name]: event.target.checked\n      // [event.target.name]: event.target.value - not working\n      // but, another way\n      // [event.target.name]: event.target.value === \"true\" ? false : true\n    });\n  };\n\n  onChangeAvatar = event => {\n    const reader = new FileReader();\n    reader.onload = event =>{\n      this.setState({\n        avatar: event.target.result\n      });\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"refs\", this.username.value, this.password.value);\n    const errors = {}\n    if (this.state.username.length < 6){\n      errors.usarname = \"Must be 6 characters or more\";\n    }\n    if(this.state.password < 4){\n      errors.password = \"Must be 4 characters or more\";\n    }\n    if(this.state.password !== this.state.repeatPassword){\n      errors.repeatPassword = \"Must be equal password\";\n    }\n    if(Object.keys(errors).length > 0){\n      //error\n      this.setState({\n        errors: errors\n      });\n    }\n    else{\n      this.setState({\n        errors: {}\n      });\n      console.log(\"submit\", this.state);\n    }\n  };\n\n  getItemsOptions = items =>{\n    return items.map(item =>(\n      <option key={item.id} value={item.id}>\n        {item.name}\n      </option>\n    ));\n  };\n\n  render() {\n    // const getCountriesOptions = countries.map(country =>(\n    //   <option key={country.id} value={country.id}>\n    //     {country.name}\n    //   </option>\n    // ));\n    \n    //console.log(this);\n    return (\n      <div className=\"form-container card\">\n        <form className=\"form card-body\">\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter username\"\n              ref={node => (this.username = node)}\n              name=\"username\"\n              value = {this.state.username}\n              onChange = {this.onChange}\n            />\n            {this.state.errors.usarname ? (\n              <div className=\"invalid-feedback\">                 {this.state.errors.usarname}\n              </div>\n              ) : null}\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n              ref={node => (this.password = node)}\n              name=\"password\"\n              value = {this.state.password}\n              onChange = {this.onChange}\n            />\n            {this.state.errors.password ? (\n              <div className=\"invalid-feedback\">                 {this.state.errors.password}\n              </div>\n              ) : null}\n          </div>\n          <div className=\"form-group\">\n            <label>Repeat password</label>\n            <input\n              type = \"text\"\n              className = \"form-control\"\n              placeholder = \"Enter repeat password\"\n              ref = {node => (this.repeatPassword = node)}\n              name = \"repeatPassword\"\n              value = {this.state.repeatPassword}\n              onChange = {this.onChange}\n            />\n            {this.state.errors.repeatPassword ? (\n              <div className=\"invalid-feedback\">                 {this.state.errors.repeatPassword}\n              </div>\n              ) : null}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"country\">Country</label>\n            <select \n              className = \"form-control\" \n              id = \"country\"\n              name =\"country\"\n              value = {this.state.country}\n              onChange = {this.onChange}\n            >\n              {this.getItemsOptions(countries)}\n            </select>\n          </div>\n          <fieldset className=\"form-group\">\n            <div>Gender</div>\n            <div className=\"form-check\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                id=\"male\" \n                name=\"gender\"\n                value=\"male\"\n                checked={this.state.gender === \"male\"}\n                onChange={this.onChange}\n              />\n              <label className=\"form-check-label\" htmlFor=\"male\">\n                Male\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input \n                className=\"form-check-input\" \n                type=\"radio\" \n                id=\"female\" \n                name=\"gender\"\n                value=\"female\"\n                checked={this.state.gender === \"female\"}\n                onChange={this.onChange}\n              />\n              <label className=\"form-check-label\" htmlFor=\"female\">\n                Female\n              </label>\n            </div>\n          </fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"avatar\">Avatar</label>\n            <input \n              type=\"file\" \n              className=\"form-control-file\" \n              id=\"avatar\" \n              name=\"avatar\"\n              onChange={this.onChangeAvatar} \n            />\n          </div>\n          <div className=\"form-check mb-2\">\n            <input \n              className=\"form-check-input\" \n              type=\"checkbox\" \n              id=\"agree\" \n              name=\"agree\"\n              value={this.state.agree}\n              onChange={this.onChangeAgree}\n              checked={this.state.agree}\n            />\n            <label className=\"form-check-label\" htmlFor=\"agree\">\n              Confirm the processing of data\n            </label>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary w-100\"\n            onClick={this.onSubmit}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}